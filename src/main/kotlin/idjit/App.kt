/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package idjit

import java.nio.file.Files
import java.nio.file.Paths
import kotlin.system.exitProcess

val timeUnits = mapOf("d" to 1L, "w" to 7L, "m" to 30L, "y" to 365L)
const val LOE_REGEX = "\\s*(?:(\\d+)\\s*([ymwd]))\\s*"

fun parseLoe(s: String): Long = Regex(LOE_REGEX)
    .findAll(s)
    .fold(0L) { days, m ->
        days + m.groups
            .toList()
            .drop(1)
            .map { it!!.value }
            .let {
                it[0].toLong() * timeUnits.getValue(it[1])
            }
    }

fun main(args: Array<String>) {
    if (args.size == 2 && args[0] == "init") {
        doInit(args[1])
        exitProcess(0)
    }
    val db = Db(findDb("")!!)
    if (args.size > 1) {
        doAdd(db, args)
        exitProcess(0)
    }
}

fun doInit(file: String) {
    Db.initialize(file)
}

fun doAdd(db : Db, args: Array<String>) {
    val t = Task(args[0], args[1])
    db.insertTask(t)
}

fun findDb(dir: String, name: String = ".idjit.db") : String? {
    var p = Paths.get(dir)
    while (p != null) {
        val db = p.resolve(name)
        if (Files.exists(db)) {
            return db.toString()
        }
        p = p.parent
    }
    return null
}