/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package idjit

import java.sql.Timestamp
import java.time.Duration
import java.time.Instant
import java.time.temporal.ChronoUnit
import kotlin.test.Test
import kotlin.test.assertEquals
import kotlin.test.assertNotNull

fun futureTS(days: Long) = Timestamp.from(
    Instant
        .now()
        .truncatedTo(ChronoUnit.DAYS)
        .plus(Duration.ofDays(days))
)

class AppTest {
    @Test
    fun testAppHasAGreeting() {
        val classUnderTest = App()
        assertNotNull(classUnderTest.greeting, "app should have a greeting")
    }

    @Test
    fun testAppCanCreateTask() {
        val t = Task("Test task", "1w")
        assertNotNull(t, "app can create task")

        assertEquals("1w", t.loe, "Task should have loe")
        assertNotNull(t.eta, "Task should have eta")
        assertEquals(futureTS(7), t.eta, "Task ETA should be calculated")
    }

    @Test
    fun testParseLoe() {
        assertEquals(7, parseLoe("1w"))
        assertEquals(463, parseLoe("1d3m1y1w"))
    }

    @Test
    fun testSimpleDep() {
        val p = Task("Parent", "1w")
        val c = Task("Child", "1w")
        val c2 = Task("Child", "3d")
        p.dep(c)
        p.dep(c2)
        assertEquals(futureTS(14), p.eta, "ETA includes child")
    }
}
